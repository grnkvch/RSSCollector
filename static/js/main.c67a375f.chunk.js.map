{"version":3,"sources":["redux/reducers/content.js","redux/reducers/source.js","redux/reducers/index.js","redux/actionTypes.js","redux/store.js","constants/endpoints.js","helpers/formQuery.js","redux/actions.js","redux/selectors.js","components/ItemCard/index.js","components/ItemCard/ItemCard.js","components/Content/Content.js","components/Content/index.js","helpers/dataConditioner.js","components/SourceButton/index.js","components/SourceButton/SourceButton.js","components/ControlPanel/ControlPanel.js","components/ControlPanel/index.js","App.js","serviceWorker.js","index.js"],"names":["initialState","Map","localStorage","sources","JSON","parse","combineReducers","content","state","action","type","payload","source","sourceList","map","item","has","get","newList","set","createStore","rootReducer","applyMiddleware","thunk","BACK_END","formQuery","queryString","forEach","checked","addContent","addSource","toggleSource","fetchContent","dispatch","getState","a","axios","data","fetchSource","getSources","getContent","ItemCard","props","key","link","className","href","target","rel","Date","pubDate","toLocaleString","year","month","day","toLocaleTimeString","sourceTitle","title","thumbnail","src","alt","style","width","height","mapDispatchToProps","actions","Content","connect","ownProps","useState","columnCount","setColumnCount","setContent","useEffect","setCount","document","querySelector","offsetWidth","n","Math","floor","window","addEventListener","setItem","stringify","Array","isArray","arr","itemTransform","initial","counter","reduce","acc","push","dataConditioner","maxWidth","SourceButton","onClick","children","ControlPanel","controls","App","Boolean","location","hostname","match","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c67a375f.chunk.js","sourcesContent":["import {\r\n  ADD_CONTENT,\r\n} from \"../actionTypes\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_CONTENT: {\r\n      const { content } = action.payload;\r\n      return content;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","\r\nimport {\r\n  ADD_SOURCE,\r\n  TOGGLE_SOURCE\r\n} from \"../actionTypes\";\r\n\r\nconst initialState = new Map(localStorage.sources ? JSON.parse(localStorage.sources) : null);\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_SOURCE: {\r\n      const { sourceList } = action.payload;\r\n\r\n      return new Map([\r\n        ...state,\r\n        ...sourceList.map(item => [item,\r\n          state.has(item) ? state.get(item) : true\r\n        ]),\r\n      ])\r\n    }\r\n    case TOGGLE_SOURCE: {\r\n      const { source } = action.payload;\r\n\r\n      const newList = new Map(state);\r\n\r\n      newList.set(source, !newList.get(source));\r\n\r\n      return newList\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport content from './content';\r\nimport source from './source';\r\n\r\nexport default combineReducers({ content, source });","export const FETCH_CONTENT = \"FETCH_CONTENT\";\r\nexport const FETCH_SOURCE = \"FETCH_SOURCE\";\r\n\r\nexport const ADD_CONTENT = \"ADD_CONTENT\";\r\nexport const ADD_SOURCE = \"ADD_SOURCE\";\r\n\r\nexport const TOGGLE_SOURCE = \"TOGGLE_SOURCE\";","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk));","export const BACK_END = process.env.NODE_ENV === 'development'\r\n  ? 'http://localhost:3001'\r\n  : 'https://rss-collector-back.herokuapp.com';","import { BACK_END } from \"../constants/endpoints\";\r\n\r\nexport default function formQuery(sources = new Map()) {\r\n  let queryString = `${BACK_END}/?`;\r\n  sources.forEach((checked, source) => {\r\n    if (checked) queryString += `source[]=${source}&`\r\n  });\r\n  return queryString;\r\n}","import axios from 'axios';\r\n\r\nimport {\r\n  ADD_CONTENT,\r\n  ADD_SOURCE,\r\n  TOGGLE_SOURCE,\r\n} from \"./actionTypes\";\r\n\r\nimport formQuery from '../helpers/formQuery';\r\nimport { BACK_END } from '../constants/endpoints';\r\n\r\nexport const addContent = content => ({\r\n  type: ADD_CONTENT,\r\n  payload: { content }\r\n});\r\n\r\nexport const addSource = sourceList => ({\r\n  type: ADD_SOURCE,\r\n  payload: { sourceList }\r\n});\r\n\r\nexport const toggleSource = source => ({\r\n  type: TOGGLE_SOURCE,\r\n  payload: { source }\r\n});\r\n\r\nexport const fetchContent = () => {\r\n  return async function (dispatch, getState) {\r\n    const { source } = getState();\r\n\r\n    const { data: content } = await axios.get(formQuery(source));\r\n\r\n    dispatch(addContent(content))\r\n    return content;\r\n  }\r\n};\r\n\r\nexport const fetchSource = () => {\r\n  return async function (dispatch) {\r\n    const { data: sourceList } = await axios.get(`${BACK_END}/get-sources`);\r\n    dispatch(addSource(sourceList))\r\n    return sourceList;\r\n  }\r\n};","export const getSources = state => state.source;\r\nexport const getContent = state => state.content;","import ItemCard from \"./ItemCard\";\r\n\r\nexport default ItemCard;","import React from \"react\"\r\n\r\nimport \"./ItemCard.css\"\r\n\r\nexport default function ItemCard(props) {\r\n  const { item } = props;\r\n  return (\r\n    <a key={item.link}\r\n      className='card'\r\n      href={item.link}\r\n      target='_blank'\r\n      rel=\"noopener noreferrer\">\r\n\r\n      <div className='dateTime'>\r\n        <p>\r\n          {new Date(item.pubDate).toLocaleString('ru-RU',\r\n            { year: 'numeric', month: 'long', day: 'numeric' })}\r\n        </p>\r\n        <p>\r\n          {new Date(item.pubDate).toLocaleTimeString('ru-RU')}\r\n        </p>\r\n      </div>\r\n      <p className='source'>{item.sourceTitle}</p>\r\n      <p className='description'>{item.title}</p>\r\n      {!!item.thumbnail && <img\r\n        src={item.thumbnail} alt={`cute random `} style={{ width: '100%', height: '100%' }}\r\n      // onLoad={this.handleImageLoaded.bind(this)}\r\n      // onError={this.handleImageErrored.bind(this)}\r\n      />}\r\n    </a >\r\n  )\r\n}","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport dataConditioner from '../../helpers/dataConditioner'\r\n\r\nimport * as actions from '../../redux/actions'\r\n\r\nimport { getSources, getContent } from '../../redux/selectors'\r\n\r\nimport ItemCard from '../ItemCard'\r\n\r\nimport './Content.css'\r\n\r\n\r\nconst Content = props => {\r\n  const {\r\n    fetchSource,\r\n    sources,\r\n    fetchContent,\r\n    data,\r\n  } = props;\r\n\r\n  const [columnCount, setColumnCount] = useState(1);\r\n  const [content, setContent] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const setCount = () => {\r\n      const width = document.querySelector('.content-container').offsetWidth\r\n      if (!width) return;\r\n      const n = Math.floor(width / 200) < 1 ? 1 : Math.floor(width / 200);\r\n      if (n !== columnCount) setColumnCount(n)\r\n    }\r\n    setCount();\r\n    window.addEventListener('resize', setCount)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetchSource()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetchContent()\r\n  }, [sources])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('sources', JSON.stringify([...sources]));\r\n  }, [sources])\r\n\r\n\r\n  useEffect(() => {\r\n    if (!Array.isArray(data)) return;\r\n    setContent(dataConditioner(data, columnCount,\r\n      item => {\r\n        return (<ItemCard item={item} />)\r\n      }));\r\n  }, [columnCount, data])\r\n\r\n  return (\r\n    <div className='content-container'>\r\n      {content.map(item =>\r\n        (<div\r\n          className='content-column'\r\n          style={{ maxWidth: `${1 / columnCount * 100}%` }}>\r\n          {item}\r\n        </div>))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  sources: getSources(state),\r\n  data: getContent(state),\r\n})\r\n\r\nconst mapDispatchToProps = { ...actions }\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Content);\r\n","import Content from \"./Content\";\r\n\r\nexport default Content;","export default function dataConditioner(arr, n, itemTransform) {\r\n  const initial = new Array(n);\r\n\r\n  let counter = 0;\r\n  return arr.reduce((acc, item) => {\r\n    if (!acc[counter]) acc[counter] = [];\r\n    acc[counter].push(itemTransform ? itemTransform(item) : item);\r\n    counter += 1;\r\n    if (counter > n - 1) counter = 0;\r\n    return [...acc];\r\n  },\r\n    initial)\r\n}","import SourceButton from \"./SourceButton\";\r\n\r\nexport default SourceButton;","import React from \"react\"\r\n\r\nimport \"./SourceButton.css\"\r\n\r\nexport default function SourceButton(props) {\r\n  const { onClick = () => { }, checked } = props;\r\n  return (\r\n    <div onClick={onClick} className={`button ${checked && 'checked'}`}>\r\n      {props.children}\r\n    </div >\r\n  )\r\n}","\r\nimport React from \"react\"\r\nimport { connect } from 'react-redux'\r\n\r\nimport { getSources } from '../../redux/selectors'\r\n\r\nimport SourceButton from \"../SourceButton\"\r\nimport { toggleSource } from '../../redux/actions'\r\n\r\nimport \"./ControlPanel.css\"\r\n\r\nconst ControlPanel = props => {\r\n  const { sources: controls, toggleSource } = props;\r\n\r\n  return (\r\n    <div className=\"control-panel\">\r\n      {[...controls].map(([item, checked]) => (\r\n        <SourceButton\r\n          key={item}\r\n          checked={checked}\r\n          onClick={() => toggleSource(item)}\r\n        >\r\n          {item}\r\n        </SourceButton>\r\n      ))\r\n      }\r\n    </div >\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  sources: getSources(state),\r\n})\r\n\r\nconst mapDispatchToProps = { toggleSource }\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ControlPanel);\r\n","import ControlPanel from \"./ControlPanel\";\r\n\r\nexport default ControlPanel;","import React from 'react';\r\n\r\nimport './App.css';\r\nimport Content from './components/Content'\r\nimport ControlPanel from './components/ControlPanel';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        Новости страны и мира\r\n      </header>\r\n      <nav><ControlPanel /></nav>\r\n      <article style={{ maxWidth: '1160px' }}>\r\n        <Content />\r\n      </article>\r\n      <footer></footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}